
DECLARE
    kpis jsonb;
    chart_evolucion_origen jsonb;
    chart_gastos_transporte jsonb;
    chart_desglose_tipo jsonb; -- <-- Nuevo
    list_ultimos_gastos jsonb; -- <-- Nuevo
BEGIN
    -- 1. KPIs
    SELECT jsonb_build_object(
        'gasto_total_periodo', COALESCE((SELECT SUM(g.monto_total) FROM gastos g WHERE g.fecha_gasto BETWEEN p_start_date AND p_end_date AND (g.estado_delegacion = 'aceptado' OR g.estado_delegacion = 'directo') AND (p_tipo_gasto_ids IS NULL OR g.tipo_gasto_id = ANY(p_tipo_gasto_ids))), 0),
        'saldo_cajas_chicas', COALESCE((SELECT SUM(c.saldo_actual) FROM cajas_chicas c WHERE c.activo = true), 0),
        'delegados_pendientes', COALESCE((SELECT SUM(g.monto_total) FROM gastos g WHERE g.estado_delegacion = 'pendiente_aceptacion'), 0),
        'rendiciones_pendientes_valor', COALESCE((SELECT SUM(g.monto_total) FROM gastos g JOIN viajes v ON g.viaje_id = v.id WHERE v.estado_aprobacion = 'en_curso'), 0)
    ) INTO kpis;

    -- 2. GRÁFICOS
    -- Evolución por Origen
    SELECT jsonb_agg(e) INTO chart_evolucion_origen FROM (SELECT date_trunc('month', m.month)::date as mes, COALESCE(SUM(CASE WHEN g.caja_id IS NOT NULL THEN g.monto_total ELSE 0 END), 0) as total_caja, COALESCE(SUM(CASE WHEN g.viaje_id IS NOT NULL THEN g.monto_total ELSE 0 END), 0) as total_viaje FROM generate_series(date_trunc('month', now() - interval '11 months'), date_trunc('month', now()), '1 month') as m(month) LEFT JOIN gastos g ON date_trunc('month', g.fecha_gasto) = m.month AND (g.estado_delegacion = 'aceptado' OR g.estado_delegacion = 'directo') AND (p_tipo_gasto_ids IS NULL OR g.tipo_gasto_id = ANY(p_tipo_gasto_ids)) GROUP BY m.month ORDER BY m.month) e;
    -- Gastos por Transporte
    SELECT jsonb_agg(d) INTO chart_gastos_transporte FROM (SELECT t.nombre AS categoria, SUM(g.monto_total) AS total FROM gastos g JOIN transportes t ON g.transporte_id = t.id WHERE g.fecha_gasto BETWEEN p_start_date AND p_end_date AND g.transporte_id IS NOT NULL AND (g.estado_delegacion = 'aceptado' OR g.estado_delegacion = 'directo') AND (p_tipo_gasto_ids IS NULL OR g.tipo_gasto_id = ANY(p_tipo_gasto_ids)) GROUP BY t.nombre ORDER BY total DESC LIMIT 5) d;
    -- Desglose por Tipo (Reintegrado)
    SELECT jsonb_agg(d) INTO chart_desglose_tipo FROM (SELECT t.id as tipo_gasto_id, t.nombre_tipo_gasto as tipo, SUM(g.monto_total) as total FROM gastos g JOIN tipos_gasto_config t ON g.tipo_gasto_id = t.id WHERE g.fecha_gasto BETWEEN p_start_date AND p_end_date AND (g.estado_delegacion = 'aceptado' OR g.estado_delegacion = 'directo') AND (p_tipo_gasto_ids IS NULL OR g.tipo_gasto_id = ANY(p_tipo_gasto_ids)) GROUP BY t.id, t.nombre_tipo_gasto ORDER BY total DESC LIMIT 7) d;

    -- 3. LISTAS
    -- Últimos Gastos (Reintegrado)
    SELECT jsonb_agg(l) INTO list_ultimos_gastos FROM (SELECT g.id, g.fecha_gasto, g.descripcion_general, g.monto_total, p.nombre_completo as responsable FROM gastos g JOIN perfiles p ON g.user_id = p.id WHERE (g.estado_delegacion = 'aceptado' OR g.estado_delegacion = 'directo') AND (p_tipo_gasto_ids IS NULL OR g.tipo_gasto_id = ANY(p_tipo_gasto_ids)) ORDER BY g.fecha_gasto DESC, g.created_at DESC LIMIT 5) l;

    -- 4. CONSTRUIR RESPUESTA FINAL
    RETURN jsonb_build_object(
        'kpis', kpis,
        'charts', jsonb_build_object(
            'evolucion_origen', COALESCE(chart_evolucion_origen, '[]'::jsonb),
            'gastos_transporte', COALESCE(chart_gastos_transporte, '[]'::jsonb),
            'desglose_tipo', COALESCE(chart_desglose_tipo, '[]'::jsonb)
        ),
        'listas', jsonb_build_object(
            'ultimos_gastos', COALESCE(list_ultimos_gastos, '[]'::jsonb)
        )
    );
END;
